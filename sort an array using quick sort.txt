#include<stdio.h>
void quickSort(int * num, int start, int end){
    if (start >= end)
        return;
    int temp = num[start];
    int i = start, k = end;
    while (i < k){
        for (k; num[k] >= temp && k > i; k--);
        num[i] = num[k];
        num[k] = temp;
        for (i; num[i] <= temp && i < k; i++);
        num[k] = num[i];
        num[i] = temp;
    }
    quickSort(num, start, i-1);
    quickSort(num, k+1, end);
}
int* sortArray(int* nums, int numsSize, int* returnSize){
    quickSort(nums, 0, numsSize - 1);
    *returnSize = numsSize;
    return nums;
}
void main()
{
    int n,i;
    printf("enter number of elements in the array:\n");
    scanf("%d",&n);
    int a[n];
    int* sort;
    printf("enter the elements of the array:\n");
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    printf("elements of the array before sorting are:\n");
    for(i=0;i<n;i++)
        printf("%d\t",a[i]);
    printf("\n");
    sort=sortArray(a,n,&n);
    printf("elements of the array after sorting are:\n");
    for(i=0;i<n;i++)
        printf("%d\t",sort[i]);
    printf("\n");
}
/* Output:
enter number of elements in the array:
4
enter the elements of the array:
5 2 3 1
elements of the array before sorting are:
5 2 3 1
elements of the array after sorting are:
1 2 3 5
*/