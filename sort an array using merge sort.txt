#include<stdio.h>
void merge(int arr[], int l, int m, int r)
{
	int i, j, k;
	int n1 = m - l + 1;
	int n2 = r - m;

	int L[n1], R[n2];

	for (i = 0; i < n1; i++)
		L[i] = arr[l + i];
	for (j = 0; j < n2; j++)
		R[j] = arr[m + 1 + j];

	i = 0;
	j = 0;
	k = l;
	while (i < n1 && j < n2) {
		if (L[i] <= R[j]) {
			arr[k] = L[i];
			i++;
		}
		else {
			arr[k] = R[j];
			j++;
		}
		k++;
	}

	while (i < n1) {
		arr[k] = L[i];
		i++;
		k++;
	}

	while (j < n2) {
		arr[k] = R[j];
		j++;
		k++;
	}
}

void mergeSort(int arr[], int l, int r)
{
	if (l < r) {
		int m = l + (r - l) / 2;
		mergeSort(arr, l, m);
		mergeSort(arr, m + 1, r);

		merge(arr, l, m, r);
	}
}

int* sortArray(int* nums, int numsSize, int* returnSize){
    mergeSort(nums, 0, numsSize-1);
    *returnSize = numsSize;
    return nums;
}
void main()
{
    int n,i;
    printf("enter number of elements in the array:\n");
    scanf("%d",&n);
    int a[n];
    int* sort;
    printf("enter the elements of the array:\n");
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    printf("elements of the array before sorting are:\n");
    for(i=0;i<n;i++)
        printf("%d\t",a[i]);
    printf("\n");
    sort=sortArray(a,n,&n);
    printf("elements of the array after sorting are:\n");
    for(i=0;i<n;i++)
        printf("%d\t",sort[i]);
    printf("\n");
}
/* Output:
enter number of elements in the array:
4
enter the elements of the array:
5 2 3 1
elements of the array before sorting are:
5 2 3 1
elements of the array after sorting are:
1 2 3 5
*/